@model List<Faculty>
@using System.Security.Claims
@using Data.Repository.IRepository
@inject IHighBoardRepository highboardRepository

@{
    ViewData["Title"] = "Faculties";

    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var admin = highboardRepository.GetAll().FirstOrDefault(h => h.ApplicationUserId == userId);
    if (admin != null)
    {
        ViewData["Admin"] = admin;
    }
}

<!-- Stylesheets -->
<link rel="stylesheet" href="/css/Faculty.css">

<div class="container">
    <h1 class="text-CENTER my-4">Faculties</h1>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    else if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
    <div class="row">
        @foreach (var faculty in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card card-custom h-100">
                    @if (!string.IsNullOrEmpty(faculty.Picture))
                    {
                        <img src="@faculty.Picture" class="card-img-top" alt="@faculty.Name">
                    }
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(faculty.Logo))
                        {
                            <img src="@faculty.Logo" alt="Logo" class="LogoIndex">
                        }
                        <h5 class="card-title">@faculty.Name</h5>
                        <p class="card-text">
                            @(faculty.Description?.Length > 100 ?
                                faculty.Description.Substring(0, 100) + "..." :
                                faculty.Description)
                        </p>
                        <p class="card-text"><small class="text-muted">Number of departments: @faculty.Departments?.Count</small></p>
                        <div class="d-inline-block">
                            <a href="@Url.Action("Details", "Faculty", new { id = faculty.Id })" class="btn btn-primary Action">
                                <i class="fas fa-info-circle"></i>
                            </a>
                        </div>
                        @if (ViewBag.Admin.JobTitle != Models.Enums.JobTitle.VP_For_AcademicAffairs)
                        {
                            <div class="d-inline-block">
                                <a href="@Url.Action("Edit", "Faculty", new { id = faculty.Id })" class="btn btn-warning Action">
                                    <i class="fas fa-edit"></i>
                                </a>
                            </div>
                            <div class="d-inline-block">
                                <form asp-action="Delete" method="post" class="d-inline" id="delete-form">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@faculty.Id" />
                                    <button type="button" class="btn btn-outline-danger Action delete-btn" title="Delete">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Stylesheets -->
<script src="/js/site.js"></script>
<!-- SweetAlert2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/Delete.js" defer></script>


