@model IEnumerable<Models.Student>
@using Models.Enums;

@{
    ViewData["Title"] = "Fees Status";
    var records = ViewBag.Records as Dictionary<int, (Level Level, Semester Semester)>;
    Layout = "~/Areas/Doctors/Views/Shared/_Layout.cshtml";
}

<h1>Fees Status</h1>

<!-- Display Total Count -->
<p class="font-weight-bold">Total Students: @ViewBag.TotalCount</p>

<!-- Filter Buttons -->
<div class="btn-group mb-3" role="group" aria-label="Filter Buttons">
    <a href="@Url.Action("FeesPaid", "Student")" class="btn btn-success">Show Paid</a>
    <a href="@Url.Action("FeesUnpaid", "Student")" class="btn btn-danger">Show Unpaid</a>
</div>

<!-- Filters -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-primary text-white" id="filterHeader">
        <h5 class="mb-0"><i class="fas fa-filter"></i> Filter Students</h5>
    </div>
    <div class="card-body" id="filterBody" style="display: none;">
        <div class="row g-3">
            <div class="col-md-4">
                <label for="searchId" class="form-label"><i class="fas fa-id-card"></i> Search by ID</label>
                <input type="text" id="searchId" class="form-control" placeholder="Enter Student ID">
            </div>
            <div class="col-md-4">
                <label for="searchName" class="form-label"><i class="fas fa-user"></i> Search by Name</label>
                <input type="text" id="searchName" class="form-control" placeholder="Enter Student Name">
            </div>
            <div class="col-md-4">
                <label for="searchFaculty" class="form-label"><i class="fas fa-university"></i> Search by Faculty</label>
                <input type="text" id="searchFaculty" class="form-control" placeholder="Enter Faculty Name">
            </div>
        </div>

        <div class="row g-3 mt-2">
            <div class="col-md-4">
                <label for="searchDepartment" class="form-label"><i class="fas fa-building"></i> Search by Department</label>
                <input type="text" id="searchDepartment" class="form-control" placeholder="Enter Department Name">
            </div>
            <div class="col-md-4">
                <label for="searchLevel" class="form-label"><i class="fas fa-layer-group"></i> Search by Level</label>
                <input type="text" id="searchLevel" class="form-control" placeholder="Enter Level">
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button class="btn btn-danger w-100" id="clearFilters">
                    <i class="fas fa-times"></i> Clear Filters
                </button>
            </div>
        </div>
    </div>
</div>


<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().Id)</th>
            <th>@Html.DisplayNameFor(model => model.First().Name)</th>
            <th>@Html.DisplayName("Level")</th>
            <th>@Html.DisplayName("Semester")</th>
            <th>@Html.DisplayName("Faculty")</th>
            <th>@Html.DisplayName("Department")</th>
            <th>@Html.DisplayNameFor(model => model.First().PaymentFees)</th>
            <th>@Html.DisplayNameFor(model => model.First().PaymentFeesDate)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>
                    @if (records != null && records.ContainsKey(item.Id))
                    {
                        @records[item.Id].Level.ToString()
                    }
                    else
                    {
                        @:N/A
                    }
                </td>
                <td>
                    @if (records != null && records.ContainsKey(item.Id))
                    {
                        @records[item.Id].Semester.ToString()
                    }
                    else
                    {
                        @:N/A
                    }
                </td>
                <td>
                    @if (ViewBag.FacultyNames != null && ViewBag.FacultyNames.ContainsKey(item.DepartmentId))
                    {
                        @ViewBag.FacultyNames[item.DepartmentId]
                    }
                    else
                    {
                        @:N/A
                    }
                </td>
                <td>
                    @if (ViewBag.DepartmentNames != null && ViewBag.DepartmentNames.ContainsKey(item.DepartmentId))
                    {
                        @ViewBag.DepartmentNames[item.DepartmentId]
                    }
                    else
                    {
                        @:N/A
                    }
                </td>
                <td>
                    <span class="badge @(item.PaymentFees ? "badge-success" : "badge-danger")">
                        @(item.PaymentFees ? "Paid" : "Unpaid")
                    </span>
                </td>
                <td>
                    @if (item.PaymentFees)
                    {
                        <p class="card-text"><i class="fas fa-calendar-alt mr-2"></i><strong>Payment Date:</strong> @item.PaymentFeesDate?.ToString("d")</p>
                    }
                </td>
                <td>
                    <a href="@Url.Action("Details", "Student", new { id = item.Id })" title="Details Student">
                        <i class="fas fa-info"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="/js/FeesStatus.js" defer></script>




