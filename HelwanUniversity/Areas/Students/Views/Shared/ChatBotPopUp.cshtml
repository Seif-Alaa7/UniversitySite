<style>
    .chat-toggle {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 16px;
        border-radius: 50%;
        cursor: pointer;
        font-size: 20px;
        z-index: 1000;
        box-shadow: 0 0 8px rgba(0,0,0,0.2);
        touch-action: none;
    }

    .chat-popup {
        position: fixed;
        bottom: 80px;
        right: 20px;
        width: 350px;
        height: 520px;
        border: 1px solid #ccc;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        z-index: 1000;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    .chat-popup.hidden {
        display: none;
    }

    .chat-header {
        background-color: #007bff;
        color: white;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .close-btn {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
    }

    .chat-iframe {
        flex-grow: 1;
        width: 100%;
        border: none;
    }
</style>

<button id="chatToggleBtn" class="chat-toggle" title="Chat with us">
    💬
</button>

<div id="chatPopup" class="chat-popup hidden">
    <div class="chat-header">
        <span>HUChat</span>
        <button id="closeChat" class="close-btn fa-solid fa-window-minimize" style="color: #ffffff;"></button>
    </div>
    <iframe src="/Students/Student/chat" class="chat-iframe"></iframe>
</div>

<script>
    const chatToggleBtn = document.getElementById('chatToggleBtn');
    const chatPopup = document.getElementById('chatPopup');
    let isDragging = false;
    let offsetX, offsetY;
    let hasDragged = false;

    chatToggleBtn.addEventListener('mousedown', (e) => {
        isDragging = true;
        hasDragged = false;
        offsetX = e.clientX - chatToggleBtn.getBoundingClientRect().left;
        offsetY = e.clientY - chatToggleBtn.getBoundingClientRect().top;
        chatToggleBtn.style.cursor = 'grabbing';
    });

    document.addEventListener('mousemove', (e) => {
        if (!isDragging) return;
        
        hasDragged = true;
        const x = e.clientX - offsetX;
        const y = e.clientY - offsetY;
        
        chatToggleBtn.style.left = `${x}px`;
        chatToggleBtn.style.top = `${y}px`;
        chatToggleBtn.style.right = 'auto';
        chatToggleBtn.style.bottom = 'auto';
    });

    document.addEventListener('mouseup', (e) => {
        if (isDragging && !hasDragged) {
            chatPopup.classList.toggle('hidden');
        }
        isDragging = false;
        chatToggleBtn.style.cursor = 'pointer';
    });

    chatToggleBtn.addEventListener('touchstart', (e) => {
        isDragging = true;
        hasDragged = false;
        const touch = e.touches[0];
        offsetX = touch.clientX - chatToggleBtn.getBoundingClientRect().left;
        offsetY = touch.clientY - chatToggleBtn.getBoundingClientRect().top;
    });

    document.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
        hasDragged = true;
        const touch = e.touches[0];
        
        const x = touch.clientX - offsetX;
        const y = touch.clientY - offsetY;
        
        chatToggleBtn.style.left = `${x}px`;
        chatToggleBtn.style.top = `${y}px`;
        chatToggleBtn.style.right = 'auto';
        chatToggleBtn.style.bottom = 'auto';
    });

    document.addEventListener('touchend', (e) => {
        if (isDragging && !hasDragged) {
            chatPopup.classList.toggle('hidden');
        }
        isDragging = false;
    });

    document.getElementById('closeChat').addEventListener('click', function () {
        chatPopup.classList.add('hidden');
    });

    document.addEventListener('click', function(e) {
        if (!chatPopup.classList.contains('hidden') && 
            !chatPopup.contains(e.target) && 
            e.target !== chatToggleBtn) {
            chatPopup.classList.add('hidden');
        }
    });
</script>