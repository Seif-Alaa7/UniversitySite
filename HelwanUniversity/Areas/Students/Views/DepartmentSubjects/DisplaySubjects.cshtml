@model IEnumerable<Models.DepartmentSubjects>

@{
    ViewData["Title"] = "Academic Registration";
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <title>@ViewData["Title"] - Helwan University</title>
    <link rel="icon" href="@ViewBag.LogoTitle" type="image/png">

    <!-- External Stylesheets -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/SubjectRegisteration.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/SideBar.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

</head>

<body>

    <!-- Sidebar Partial -->
    @await Html.PartialAsync("~/Areas/Students/Views/Shared/StudentSidebar.cshtml")

    <div id="main-content" class="container">
        <br />
        @if (ViewBag.SuccessMessage != null)
        {
            <div class="alert alert-success">
                @ViewBag.SuccessMessage
            </div>
        }
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger">
                @ViewBag.ErrorMessage
            </div>
        }
        <!-- First Table -->
        <h3 class="section-header">Subjects Registered</h3>
        <table class="table table-striped table-bordered custom-table">
            <thead>
                <tr>
                    <th>Subject</th>
                    <th>Doctor</th>
                    <th>Subject Hours</th>
                    <th>Summer Status</th>
                    <th>Students Allowed</th>
                    <th>Subject Type</th>
                    <th>Salary</th>
                </tr>
            </thead>
            <tbody>
                @if (ViewBag.Subjects != null)
                {
                    foreach (var item in ViewBag.Subjects)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@ViewBag.DoctorNames[item.DoctorId]</td>
                            <td>@item.SubjectHours</td>
                            <td>@item.summerStatus</td>
                            <td>
                                @if (item.summerStatus == Models.Enums.SummerStatus.Open)
                                {
                                    @item.StudentsAllowed
                                }
                                else
                                {
                                    @:0
                                }
                            </td>
                            <td>@item.subjectType</td>
                            <td>@item.Salary</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <!-- Second Table -->
        <table class="table table-striped table-bordered custom-table">
            <thead>
                <tr>
                        <th>@Html.DisplayNameFor(model => model.Subject.Name)</th>
                        <th>@Html.DisplayName("Summer Status")</th>
                        <th>@Html.DisplayName("Summer Allowed")</th>
                        <th>@Html.DisplayName("Subject Type")</th>
                        <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Subject.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Subject.summerStatus)</td>
                        @if (item.Subject.summerStatus == Models.Enums.SummerStatus.Open)
                        {
                            <td>@Html.DisplayFor(modelItem => item.Subject.StudentsAllowed)</td>
                        }
                        else
                        {
                            <td>0</td>
                        }
                        <td>@Html.DisplayFor(modelItem => item.Subject.subjectType)</td>
                        <td>
                            @Html.ActionLink("+", "AddSubject", "StudentSubjects", new { studentId = ViewBag.StudentId, subjectId = item.Subject.Id }, new { @class = "btn btn-success btn-sm" }) |
                            @Html.ActionLink("-", "DeleteSubject", "StudentSubjects", new { studentId = ViewBag.StudentId, subjectId = item.Subject.Id }, new { @class = "btn btn-danger btn-sm" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>

