@using System.Security.Claims;

@{
    ViewData["Title"] = "University Chatbot";
    Layout = null;
}

<style>
    .chat-container {
        max-width: 800px;
        margin: 30px auto;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        background-color: #fff;
    }

    .chat-header {
        background-color: #3f51b5;
        color: white;
        padding: 15px 20px;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
        font-size: 1.2em;
        font-weight: bold;
        text-align: center;
    }

    .chat-window {
        height: 400px;
        overflow-y: auto;
        padding: 15px;
        background-color: #f9f9f9;
        border-bottom: 1px solid #eee;
    }

    .chat-message {
        margin-bottom: 10px;
        padding: 8px 12px;
        border-radius: 6px;
        max-width: 80%;
        word-wrap: break-word;
    }

        .chat-message.user {
            background-color: #e3f2fd;
            align-self: flex-end;
            margin-left: auto;
            text-align: right;
        }

        .chat-message.bot {
            background-color: #e8f5e9;
            align-self: flex-start;
            margin-right: auto;
        }

        .chat-message strong {
            font-weight: bold;
            margin-bottom: 3px;
            display: block;
        }

    .chat-input-area {
        display: flex;
        padding: 15px;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
        background-color: #eee;
    }

        .chat-input-area input {
            flex-grow: 1;
            padding: 10px 15px;
            border: 1px solid #ccc;
            border-radius: 20px;
            margin-right: 10px;
            font-size: 1em;
        }

        .chat-input-area button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s ease;
        }

            .chat-input-area button:hover {
                background-color: #45a049;
            }
</style>

<div class="chat-container">
    <div class="chat-header">
        University Chatbot
    </div>
    <div class="chat-window" id="chat-window">
    </div>
    <div class="chat-input-area">
        <input type="text" id="user-input" placeholder="Type your message..." autofocus>
        <button id="send-button">Send</button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const chatWindow = document.getElementById('chat-window');
            const userInput = document.getElementById('user-input');
            const sendButton = document.getElementById('send-button');

            const userId = '@User.FindFirstValue(ClaimTypes.NameIdentifier)';

            sendButton.addEventListener('click', sendMessage);
            userInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });

            function appendMessage(sender, text, isUser = false) {
                const msgDiv = document.createElement('div');
                msgDiv.className = 'chat-message ' + (isUser ? 'user' : 'bot');
                msgDiv.innerHTML = `<strong>${sender}:</strong> ${text}`;
                chatWindow.appendChild(msgDiv);
                chatWindow.scrollTop = chatWindow.scrollHeight;
            }

            async function sendMessage() {
                const message = userInput.value.trim();
                if (!message) return;

                appendMessage('You', message, true);
                userInput.value = '';
                userInput.disabled = true;
                sendButton.disabled = true;

                try {
                    const response = await fetch('/api/ChatbotApi/SendMessage', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            message: message
                        })
                    });

                    const data = await response.json();
                    if (response.ok) {
                        appendMessage('Bot', data.response);
                    } else {
                        const errorMessage = data.response || data.detail || `Error: ${response.status} ${response.statusText}`;
                        appendMessage('Bot', `Error: ${errorMessage}`);
                        console.error('API Error:', response.status, data);
                    }
                } catch (error) {
                    console.error('Network or parsing error:', error);
                    appendMessage('Bot', 'Error: Could not connect to the chatbot service.');
                } finally {
                    userInput.disabled = false;
                    sendButton.disabled = false;
                    userInput.focus();
                }
            }

            appendMessage('Bot', 'Hello! I am your University Chatbot. How can I help you today?');
        });
    </script>
}